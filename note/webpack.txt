
安装node.js
npm install -g cnpm --registry=https://registry.npm.taobao.org

npm命令
卸载 uninstall un
更新模块 update up
模块列表 ls

安装Visual Studio Code
Ctrl + Shift + P，切入到命令行模式。输入“Configure Language”


My project-------------------------------------------------------------------------------------------

dist
src
    lib
    mian 主路由
    xx 次路由文件夹
    tubiao.ico
    index.html
    router.js
    main.js
.gitignore
README.md
开原协议文件

.gitignore
  node_modeles
  .idea
  .vscode
  .git

npm init -y


cnpm i webpack -g
cnpm i webpack-cli -g

cnpm i webpack -D
cnpm i webpack-cli -D






webpack.config.js

const path = require("path");

module.exports = {
  entry: "./src/main.js",
  output: {
    path: path.join(__dirname, "./dist"),
    filename: "bundle.js"
  }
};

<script src="../dist/bundle.js"></script>

cnpm i webpack-dev-server -D

"dev": "webpack-dev-server --open --contentBase src --hot"
"dev": "webpack-dev-server --open --port 3000 --contentBase src --hot"

<script src="./bundle.js"></script>

cnpm i html-webpack-plugin -D

const htmlWebpackPlugin = require("html-webpack-plugin");

plugins: [
    new htmlWebpackPlugin({
        template: path.join(__dirname, "./src/index.html"),
        filename: "index.html"
    })
]

<!-- <script src="./bundle.js"></script> -->





html热更新
cnpm i raw-loader -D
import "./index.html";
module:{
    rules:[
        {test: /\.(htm|html)$/, use:["raw-loader"]}
    ]
}


js转换
cnpm i  babel-core@6.26.3 babel-loader@7.1.4 babel-plugin-transform-runtime -D
cnpm i  babel-preset-env babel-preset-stage-0 -D

module:{
    rules:[
         { test: /\.js$/, use: 'babel-loader', exclude: /node_modules/ }
    ]
}
 根目录.babelrc
{
    "presets": [ "env","stage-0" ],
    "plugins": [ "transform-runtime" ]
}




css样式区域---------------------------------------------------------------------------------------

在入口js文件 import "./css/index.css";
cnpm i style-loader css-loader -D
module:{
    rules:[
        {test: /\.css$/, use:["style-loader", "css-loader"]}
    ]
}


import "./css/index.less";
cnpm i less -D
cnpm i less-loader -D
{test: /\.less$/, use: ["style-loader", "css-loader", "less-loader"]}


import "./css/index.scss";
cnpm i node-sass -D
cnpm i sass-loader -D
{test: /\.scss$/, use: ["style-loader", "css-loader", "sass-loader"]}


import "./css/index.styl";
cnpm i stylus stylus-loader -D
{test: /\.styl$/, use: ["style-loader", "css-loader", "stylus-loader"]}


cnpm i url-loader file-loader -D
{test: /\.(jpg|gif|bmp|jpeg)$/, use: ["url-loader?limit=7631(大于此数值进行编码)&name=[hash:8(32位哈希值)]-[name].[ext]"]}
{test: /\.(ttf|eot|svg|woff|woff2)$/, use: "url-loader"} //处理字体文件








导入vue---------------------------------------------------------------------------------------------
    <div id="app">  
    </div>

cnpm i vue -S
cnpm i vue-loader vue-template-compiler -D

{ test: /\.vue$/, use: "vue-loader" }
    resolve: {
        alias: { "vue$": "vue/dist/vue.js" }
    }
const VueLoaderPlugin = require("vue-loader/lib/plugin");
    plugins: [
        new VueLoaderPlugin()
    ]

import Vue from "vue"

App.vue
<template>
    <dir>
        <h1>App组件</h1>
    </dir>
</template>

<script>
export default {
    
}
</script>

<style lang="scss" scoped>

</style>


import app from "./App.vue";

var vm = new Vue({
  el: "#app",
  render: c=>(app)
})

render: function(createElements) {
  return createElements(xx)
}


"@vue/component-compiler-utils": "^3.0.0", x
"vue-hot-reload-api": "^2.3.3", x
"vue-style-loader": "^4.1.2", x


导入vue-router------------------------------------------------------------------------
cnpm i vue-router -S

import VueRouter from "vue-router";
Vue.use(VueRouter);

var router = new  VueRouter({
	routes: []
})

var vm= new Vue({
  el: "#app",
  render: c=>(app),
  router
})

抽离路由--------------------------------------------------------------------------
复制一份 import VueRouter from "vue-router";
import组件类
实列化对象
var router = new  VueRouter({
	routes: []
})
export default router;
import router from "./router.js";



cnpm install axios -S
// 引入 axios
import axios from 'axios';
axios.defaults.baseURL = "https://www.ifilm.ltd/api/";
// 将axios绑定给vue成为一个属性
Vue.prototype.$axios = axios;



另一个-------------------------------------------------------------------------------------------
cnpm i jquery -S
import $ from "jquery";
const webpack = require('webpack')
  plugins: [
      new webpack.ProvidePlugin({
          "$": "jquery",
          "jQuery": "jquery",
          "window.jQuery": "jquery"
      })
    ]



样式框架--------------------------------------------------------------------------------------------

import 'bootstrap/dist/css/bootstrap.min.css'
import 'bootstrap/dist/umd/popper.min.js'
import 'bootstrap/dist/js/bootstrap.min.js'
cnpm i popper.js@1.14.7 -S
cnpm i bootstrap -S

plugins: [
   new webpack.optimize.CommonsChunkPlugin('common'),
   new webpack.ProvidePlugin({
     jQuery: 'jquery',
     $: 'jquery',
    Popper: 'popper.js'
   })
]



Mint UI ------------------------------------------------------------------------------------------
npm i mint-ui -S

import MintUI from 'mint-ui'
import 'mint-ui/lib/style.css'
Vue.use(MintUI)

cnpm install babel-plugin-component -D

.babelrc
 {
  "presets": [
    ["es2015", { "modules": false }]
  ],
  "plugins": [["component", [
    {
      "libraryName": "mint-ui",
      "style": true
    }
  ]]]
}

import { Button, Cell } from 'mint-ui'
Vue.component(Button.name, Button)
/* 或写为
 * Vue.use(Button)
 * Vue.use(Cell)
 */